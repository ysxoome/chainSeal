// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package tool

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
)

// SealsrouterABI is the input ABI used to generate the binding from.
const SealsrouterABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"_sealType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"ApprovalDelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"_sealType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"RevokeDelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"legalAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"creditCode\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"SealsCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_SEAl_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSeals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allSealsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_sealType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_signTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"approvalDelegate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_legalAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_creditCode\",\"type\":\"bytes\"}],\"name\":\"calculateSeal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seal\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_legalAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_creditCode\",\"type\":\"bytes\"}],\"name\":\"createSeal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_sealType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_signTime\",\"type\":\"uint256\"}],\"name\":\"encodePacked\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"res\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getSeal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_sealType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"querySealApprovl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"}],\"name\":\"querySealOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"}],\"name\":\"querySealStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_sealType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_signTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"revokeDelegate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sealAddr\",\"type\":\"address\"}],\"name\":\"revokeSeal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sealStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// SealsrouterBin is the compiled bytecode used for deploying new contracts.
var SealsrouterBin = ""

// DeploySealsrouter deploys a new contract, binding an instance of Sealsrouter to it.
func DeploySealsrouter(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Sealsrouter, error) {
	parsed, err := abi.JSON(strings.NewReader(SealsrouterABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SealsrouterBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Sealsrouter{SealsrouterCaller: SealsrouterCaller{contract: contract}, SealsrouterTransactor: SealsrouterTransactor{contract: contract}, SealsrouterFilterer: SealsrouterFilterer{contract: contract}}, nil
}

func AsyncDeploySealsrouter(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(SealsrouterABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(SealsrouterBin), backend)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// Sealsrouter is an auto generated Go binding around a Solidity contract.
type Sealsrouter struct {
	SealsrouterCaller     // Read-only binding to the contract
	SealsrouterTransactor // Write-only binding to the contract
	SealsrouterFilterer   // Log filterer for contract events
}

// SealsrouterCaller is an auto generated read-only Go binding around a Solidity contract.
type SealsrouterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SealsrouterTransactor is an auto generated write-only Go binding around a Solidity contract.
type SealsrouterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SealsrouterFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type SealsrouterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SealsrouterSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type SealsrouterSession struct {
	Contract     *Sealsrouter      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SealsrouterCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type SealsrouterCallerSession struct {
	Contract *SealsrouterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// SealsrouterTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type SealsrouterTransactorSession struct {
	Contract     *SealsrouterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// SealsrouterRaw is an auto generated low-level Go binding around a Solidity contract.
type SealsrouterRaw struct {
	Contract *Sealsrouter // Generic contract binding to access the raw methods on
}

// SealsrouterCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type SealsrouterCallerRaw struct {
	Contract *SealsrouterCaller // Generic read-only contract binding to access the raw methods on
}

// SealsrouterTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type SealsrouterTransactorRaw struct {
	Contract *SealsrouterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSealsrouter creates a new instance of Sealsrouter, bound to a specific deployed contract.
func NewSealsrouter(address common.Address, backend bind.ContractBackend) (*Sealsrouter, error) {
	contract, err := bindSealsrouter(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Sealsrouter{SealsrouterCaller: SealsrouterCaller{contract: contract}, SealsrouterTransactor: SealsrouterTransactor{contract: contract}, SealsrouterFilterer: SealsrouterFilterer{contract: contract}}, nil
}

// NewSealsrouterCaller creates a new read-only instance of Sealsrouter, bound to a specific deployed contract.
func NewSealsrouterCaller(address common.Address, caller bind.ContractCaller) (*SealsrouterCaller, error) {
	contract, err := bindSealsrouter(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SealsrouterCaller{contract: contract}, nil
}

// NewSealsrouterTransactor creates a new write-only instance of Sealsrouter, bound to a specific deployed contract.
func NewSealsrouterTransactor(address common.Address, transactor bind.ContractTransactor) (*SealsrouterTransactor, error) {
	contract, err := bindSealsrouter(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SealsrouterTransactor{contract: contract}, nil
}

// NewSealsrouterFilterer creates a new log filterer instance of Sealsrouter, bound to a specific deployed contract.
func NewSealsrouterFilterer(address common.Address, filterer bind.ContractFilterer) (*SealsrouterFilterer, error) {
	contract, err := bindSealsrouter(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SealsrouterFilterer{contract: contract}, nil
}

// bindSealsrouter binds a generic wrapper to an already deployed contract.
func bindSealsrouter(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SealsrouterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Sealsrouter *SealsrouterRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Sealsrouter.Contract.SealsrouterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Sealsrouter *SealsrouterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.SealsrouterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Sealsrouter *SealsrouterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.SealsrouterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Sealsrouter *SealsrouterCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Sealsrouter.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Sealsrouter *SealsrouterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Sealsrouter *SealsrouterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.contract.Transact(opts, method, params...)
}

// INITCODESEAlHASH is a free data retrieval call binding the contract method 0xd4c08f02.
//
// Solidity: function INIT_CODE_SEAl_HASH() constant returns(bytes32)
func (_Sealsrouter *SealsrouterCaller) INITCODESEAlHASH(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "INIT_CODE_SEAl_HASH")
	return *ret0, err
}

// INITCODESEAlHASH is a free data retrieval call binding the contract method 0xd4c08f02.
//
// Solidity: function INIT_CODE_SEAl_HASH() constant returns(bytes32)
func (_Sealsrouter *SealsrouterSession) INITCODESEAlHASH() ([32]byte, error) {
	return _Sealsrouter.Contract.INITCODESEAlHASH(&_Sealsrouter.CallOpts)
}

// INITCODESEAlHASH is a free data retrieval call binding the contract method 0xd4c08f02.
//
// Solidity: function INIT_CODE_SEAl_HASH() constant returns(bytes32)
func (_Sealsrouter *SealsrouterCallerSession) INITCODESEAlHASH() ([32]byte, error) {
	return _Sealsrouter.Contract.INITCODESEAlHASH(&_Sealsrouter.CallOpts)
}

// AllSeals is a free data retrieval call binding the contract method 0xdcffa4e4.
//
// Solidity: function allSeals(uint256 ) constant returns(address)
func (_Sealsrouter *SealsrouterCaller) AllSeals(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "allSeals", arg0)
	return *ret0, err
}

// AllSeals is a free data retrieval call binding the contract method 0xdcffa4e4.
//
// Solidity: function allSeals(uint256 ) constant returns(address)
func (_Sealsrouter *SealsrouterSession) AllSeals(arg0 *big.Int) (common.Address, error) {
	return _Sealsrouter.Contract.AllSeals(&_Sealsrouter.CallOpts, arg0)
}

// AllSeals is a free data retrieval call binding the contract method 0xdcffa4e4.
//
// Solidity: function allSeals(uint256 ) constant returns(address)
func (_Sealsrouter *SealsrouterCallerSession) AllSeals(arg0 *big.Int) (common.Address, error) {
	return _Sealsrouter.Contract.AllSeals(&_Sealsrouter.CallOpts, arg0)
}

// AllSealsLength is a free data retrieval call binding the contract method 0xa256c283.
//
// Solidity: function allSealsLength() constant returns(uint256)
func (_Sealsrouter *SealsrouterCaller) AllSealsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "allSealsLength")
	return *ret0, err
}

// AllSealsLength is a free data retrieval call binding the contract method 0xa256c283.
//
// Solidity: function allSealsLength() constant returns(uint256)
func (_Sealsrouter *SealsrouterSession) AllSealsLength() (*big.Int, error) {
	return _Sealsrouter.Contract.AllSealsLength(&_Sealsrouter.CallOpts)
}

// AllSealsLength is a free data retrieval call binding the contract method 0xa256c283.
//
// Solidity: function allSealsLength() constant returns(uint256)
func (_Sealsrouter *SealsrouterCallerSession) AllSealsLength() (*big.Int, error) {
	return _Sealsrouter.Contract.AllSealsLength(&_Sealsrouter.CallOpts)
}

// CalculateSeal is a free data retrieval call binding the contract method 0xb4e773a1.
//
// Solidity: function calculateSeal(address _legalAddr, bytes _creditCode) constant returns(address seal)
func (_Sealsrouter *SealsrouterCaller) CalculateSeal(opts *bind.CallOpts, _legalAddr common.Address, _creditCode []byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "calculateSeal", _legalAddr, _creditCode)
	return *ret0, err
}

// CalculateSeal is a free data retrieval call binding the contract method 0xb4e773a1.
//
// Solidity: function calculateSeal(address _legalAddr, bytes _creditCode) constant returns(address seal)
func (_Sealsrouter *SealsrouterSession) CalculateSeal(_legalAddr common.Address, _creditCode []byte) (common.Address, error) {
	return _Sealsrouter.Contract.CalculateSeal(&_Sealsrouter.CallOpts, _legalAddr, _creditCode)
}

// CalculateSeal is a free data retrieval call binding the contract method 0xb4e773a1.
//
// Solidity: function calculateSeal(address _legalAddr, bytes _creditCode) constant returns(address seal)
func (_Sealsrouter *SealsrouterCallerSession) CalculateSeal(_legalAddr common.Address, _creditCode []byte) (common.Address, error) {
	return _Sealsrouter.Contract.CalculateSeal(&_Sealsrouter.CallOpts, _legalAddr, _creditCode)
}

// EncodePacked is a free data retrieval call binding the contract method 0x48115f9c.
//
// Solidity: function encodePacked(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime) constant returns(bytes res)
func (_Sealsrouter *SealsrouterCaller) EncodePacked(opts *bind.CallOpts, sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "encodePacked", sealAddr, _sealType, _addr, _signTime)
	return *ret0, err
}

// EncodePacked is a free data retrieval call binding the contract method 0x48115f9c.
//
// Solidity: function encodePacked(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime) constant returns(bytes res)
func (_Sealsrouter *SealsrouterSession) EncodePacked(sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int) ([]byte, error) {
	return _Sealsrouter.Contract.EncodePacked(&_Sealsrouter.CallOpts, sealAddr, _sealType, _addr, _signTime)
}

// EncodePacked is a free data retrieval call binding the contract method 0x48115f9c.
//
// Solidity: function encodePacked(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime) constant returns(bytes res)
func (_Sealsrouter *SealsrouterCallerSession) EncodePacked(sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int) ([]byte, error) {
	return _Sealsrouter.Contract.EncodePacked(&_Sealsrouter.CallOpts, sealAddr, _sealType, _addr, _signTime)
}

// GetSeal is a free data retrieval call binding the contract method 0x39fd76cd.
//
// Solidity: function getSeal(address , bytes ) constant returns(address)
func (_Sealsrouter *SealsrouterCaller) GetSeal(opts *bind.CallOpts, arg0 common.Address, arg1 []byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "getSeal", arg0, arg1)
	return *ret0, err
}

// GetSeal is a free data retrieval call binding the contract method 0x39fd76cd.
//
// Solidity: function getSeal(address , bytes ) constant returns(address)
func (_Sealsrouter *SealsrouterSession) GetSeal(arg0 common.Address, arg1 []byte) (common.Address, error) {
	return _Sealsrouter.Contract.GetSeal(&_Sealsrouter.CallOpts, arg0, arg1)
}

// GetSeal is a free data retrieval call binding the contract method 0x39fd76cd.
//
// Solidity: function getSeal(address , bytes ) constant returns(address)
func (_Sealsrouter *SealsrouterCallerSession) GetSeal(arg0 common.Address, arg1 []byte) (common.Address, error) {
	return _Sealsrouter.Contract.GetSeal(&_Sealsrouter.CallOpts, arg0, arg1)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Sealsrouter *SealsrouterCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Sealsrouter *SealsrouterSession) Owner() (common.Address, error) {
	return _Sealsrouter.Contract.Owner(&_Sealsrouter.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Sealsrouter *SealsrouterCallerSession) Owner() (common.Address, error) {
	return _Sealsrouter.Contract.Owner(&_Sealsrouter.CallOpts)
}

// QuerySealApprovl is a free data retrieval call binding the contract method 0xb36dc997.
//
// Solidity: function querySealApprovl(address sealAddr, uint8 _sealType, address _addr) constant returns(bool)
func (_Sealsrouter *SealsrouterCaller) QuerySealApprovl(opts *bind.CallOpts, sealAddr common.Address, _sealType uint8, _addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "querySealApprovl", sealAddr, _sealType, _addr)
	return *ret0, err
}

// QuerySealApprovl is a free data retrieval call binding the contract method 0xb36dc997.
//
// Solidity: function querySealApprovl(address sealAddr, uint8 _sealType, address _addr) constant returns(bool)
func (_Sealsrouter *SealsrouterSession) QuerySealApprovl(sealAddr common.Address, _sealType uint8, _addr common.Address) (bool, error) {
	return _Sealsrouter.Contract.QuerySealApprovl(&_Sealsrouter.CallOpts, sealAddr, _sealType, _addr)
}

// QuerySealApprovl is a free data retrieval call binding the contract method 0xb36dc997.
//
// Solidity: function querySealApprovl(address sealAddr, uint8 _sealType, address _addr) constant returns(bool)
func (_Sealsrouter *SealsrouterCallerSession) QuerySealApprovl(sealAddr common.Address, _sealType uint8, _addr common.Address) (bool, error) {
	return _Sealsrouter.Contract.QuerySealApprovl(&_Sealsrouter.CallOpts, sealAddr, _sealType, _addr)
}

// QuerySealOwner is a free data retrieval call binding the contract method 0x915666e6.
//
// Solidity: function querySealOwner(address sealAddr) constant returns(address)
func (_Sealsrouter *SealsrouterCaller) QuerySealOwner(opts *bind.CallOpts, sealAddr common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "querySealOwner", sealAddr)
	return *ret0, err
}

// QuerySealOwner is a free data retrieval call binding the contract method 0x915666e6.
//
// Solidity: function querySealOwner(address sealAddr) constant returns(address)
func (_Sealsrouter *SealsrouterSession) QuerySealOwner(sealAddr common.Address) (common.Address, error) {
	return _Sealsrouter.Contract.QuerySealOwner(&_Sealsrouter.CallOpts, sealAddr)
}

// QuerySealOwner is a free data retrieval call binding the contract method 0x915666e6.
//
// Solidity: function querySealOwner(address sealAddr) constant returns(address)
func (_Sealsrouter *SealsrouterCallerSession) QuerySealOwner(sealAddr common.Address) (common.Address, error) {
	return _Sealsrouter.Contract.QuerySealOwner(&_Sealsrouter.CallOpts, sealAddr)
}

// QuerySealStatus is a free data retrieval call binding the contract method 0x8c7b01d3.
//
// Solidity: function querySealStatus(address sealAddr) constant returns(bool)
func (_Sealsrouter *SealsrouterCaller) QuerySealStatus(opts *bind.CallOpts, sealAddr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "querySealStatus", sealAddr)
	return *ret0, err
}

// QuerySealStatus is a free data retrieval call binding the contract method 0x8c7b01d3.
//
// Solidity: function querySealStatus(address sealAddr) constant returns(bool)
func (_Sealsrouter *SealsrouterSession) QuerySealStatus(sealAddr common.Address) (bool, error) {
	return _Sealsrouter.Contract.QuerySealStatus(&_Sealsrouter.CallOpts, sealAddr)
}

// QuerySealStatus is a free data retrieval call binding the contract method 0x8c7b01d3.
//
// Solidity: function querySealStatus(address sealAddr) constant returns(bool)
func (_Sealsrouter *SealsrouterCallerSession) QuerySealStatus(sealAddr common.Address) (bool, error) {
	return _Sealsrouter.Contract.QuerySealStatus(&_Sealsrouter.CallOpts, sealAddr)
}

// SealStatus is a free data retrieval call binding the contract method 0xd31e5d4b.
//
// Solidity: function sealStatus(address ) constant returns(bool)
func (_Sealsrouter *SealsrouterCaller) SealStatus(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Sealsrouter.contract.Call(opts, out, "sealStatus", arg0)
	return *ret0, err
}

// SealStatus is a free data retrieval call binding the contract method 0xd31e5d4b.
//
// Solidity: function sealStatus(address ) constant returns(bool)
func (_Sealsrouter *SealsrouterSession) SealStatus(arg0 common.Address) (bool, error) {
	return _Sealsrouter.Contract.SealStatus(&_Sealsrouter.CallOpts, arg0)
}

// SealStatus is a free data retrieval call binding the contract method 0xd31e5d4b.
//
// Solidity: function sealStatus(address ) constant returns(bool)
func (_Sealsrouter *SealsrouterCallerSession) SealStatus(arg0 common.Address) (bool, error) {
	return _Sealsrouter.Contract.SealStatus(&_Sealsrouter.CallOpts, arg0)
}

// ApprovalDelegate is a paid mutator transaction binding the contract method 0x64f9b7e6.
//
// Solidity: function approvalDelegate(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime, uint8 v, bytes32 r, bytes32 s) returns(bool)
func (_Sealsrouter *SealsrouterTransactor) ApprovalDelegate(opts *bind.TransactOpts, sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.contract.Transact(opts, "approvalDelegate", sealAddr, _sealType, _addr, _signTime, v, r, s)
}

func (_Sealsrouter *SealsrouterTransactor) AsyncApprovalDelegate(handler func(*types.Receipt, error), opts *bind.TransactOpts, sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Sealsrouter.contract.AsyncTransact(opts, handler, "approvalDelegate", sealAddr, _sealType, _addr, _signTime, v, r, s)
}

// ApprovalDelegate is a paid mutator transaction binding the contract method 0x64f9b7e6.
//
// Solidity: function approvalDelegate(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime, uint8 v, bytes32 r, bytes32 s) returns(bool)
func (_Sealsrouter *SealsrouterSession) ApprovalDelegate(sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.ApprovalDelegate(&_Sealsrouter.TransactOpts, sealAddr, _sealType, _addr, _signTime, v, r, s)
}

func (_Sealsrouter *SealsrouterSession) AsyncApprovalDelegate(handler func(*types.Receipt, error), sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncApprovalDelegate(handler, &_Sealsrouter.TransactOpts, sealAddr, _sealType, _addr, _signTime, v, r, s)
}

// ApprovalDelegate is a paid mutator transaction binding the contract method 0x64f9b7e6.
//
// Solidity: function approvalDelegate(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime, uint8 v, bytes32 r, bytes32 s) returns(bool)
func (_Sealsrouter *SealsrouterTransactorSession) ApprovalDelegate(sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.ApprovalDelegate(&_Sealsrouter.TransactOpts, sealAddr, _sealType, _addr, _signTime, v, r, s)
}

func (_Sealsrouter *SealsrouterTransactorSession) AsyncApprovalDelegate(handler func(*types.Receipt, error), sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncApprovalDelegate(handler, &_Sealsrouter.TransactOpts, sealAddr, _sealType, _addr, _signTime, v, r, s)
}

// CreateSeal is a paid mutator transaction binding the contract method 0x79853a1b.
//
// Solidity: function createSeal(address _legalAddr, bytes _creditCode) returns(address sealAddr)
func (_Sealsrouter *SealsrouterTransactor) CreateSeal(opts *bind.TransactOpts, _legalAddr common.Address, _creditCode []byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.contract.Transact(opts, "createSeal", _legalAddr, _creditCode)
}

func (_Sealsrouter *SealsrouterTransactor) AsyncCreateSeal(handler func(*types.Receipt, error), opts *bind.TransactOpts, _legalAddr common.Address, _creditCode []byte) (*types.Transaction, error) {
	return _Sealsrouter.contract.AsyncTransact(opts, handler, "createSeal", _legalAddr, _creditCode)
}

// CreateSeal is a paid mutator transaction binding the contract method 0x79853a1b.
//
// Solidity: function createSeal(address _legalAddr, bytes _creditCode) returns(address sealAddr)
func (_Sealsrouter *SealsrouterSession) CreateSeal(_legalAddr common.Address, _creditCode []byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.CreateSeal(&_Sealsrouter.TransactOpts, _legalAddr, _creditCode)
}

func (_Sealsrouter *SealsrouterSession) AsyncCreateSeal(handler func(*types.Receipt, error), _legalAddr common.Address, _creditCode []byte) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncCreateSeal(handler, &_Sealsrouter.TransactOpts, _legalAddr, _creditCode)
}

// CreateSeal is a paid mutator transaction binding the contract method 0x79853a1b.
//
// Solidity: function createSeal(address _legalAddr, bytes _creditCode) returns(address sealAddr)
func (_Sealsrouter *SealsrouterTransactorSession) CreateSeal(_legalAddr common.Address, _creditCode []byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.CreateSeal(&_Sealsrouter.TransactOpts, _legalAddr, _creditCode)
}

func (_Sealsrouter *SealsrouterTransactorSession) AsyncCreateSeal(handler func(*types.Receipt, error), _legalAddr common.Address, _creditCode []byte) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncCreateSeal(handler, &_Sealsrouter.TransactOpts, _legalAddr, _creditCode)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address newOwner) returns()
func (_Sealsrouter *SealsrouterTransactor) Initialize(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.contract.Transact(opts, "initialize", newOwner)
}

func (_Sealsrouter *SealsrouterTransactor) AsyncInitialize(handler func(*types.Receipt, error), opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Sealsrouter.contract.AsyncTransact(opts, handler, "initialize", newOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address newOwner) returns()
func (_Sealsrouter *SealsrouterSession) Initialize(newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.Initialize(&_Sealsrouter.TransactOpts, newOwner)
}

func (_Sealsrouter *SealsrouterSession) AsyncInitialize(handler func(*types.Receipt, error), newOwner common.Address) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncInitialize(handler, &_Sealsrouter.TransactOpts, newOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address newOwner) returns()
func (_Sealsrouter *SealsrouterTransactorSession) Initialize(newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.Initialize(&_Sealsrouter.TransactOpts, newOwner)
}

func (_Sealsrouter *SealsrouterTransactorSession) AsyncInitialize(handler func(*types.Receipt, error), newOwner common.Address) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncInitialize(handler, &_Sealsrouter.TransactOpts, newOwner)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Sealsrouter *SealsrouterTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.contract.Transact(opts, "renounceOwnership")
}

func (_Sealsrouter *SealsrouterTransactor) AsyncRenounceOwnership(handler func(*types.Receipt, error), opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Sealsrouter.contract.AsyncTransact(opts, handler, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Sealsrouter *SealsrouterSession) RenounceOwnership() (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.RenounceOwnership(&_Sealsrouter.TransactOpts)
}

func (_Sealsrouter *SealsrouterSession) AsyncRenounceOwnership(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncRenounceOwnership(handler, &_Sealsrouter.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Sealsrouter *SealsrouterTransactorSession) RenounceOwnership() (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.RenounceOwnership(&_Sealsrouter.TransactOpts)
}

func (_Sealsrouter *SealsrouterTransactorSession) AsyncRenounceOwnership(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncRenounceOwnership(handler, &_Sealsrouter.TransactOpts)
}

// RevokeDelegate is a paid mutator transaction binding the contract method 0x02abc6ad.
//
// Solidity: function revokeDelegate(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime, uint8 v, bytes32 r, bytes32 s) returns(bool)
func (_Sealsrouter *SealsrouterTransactor) RevokeDelegate(opts *bind.TransactOpts, sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.contract.Transact(opts, "revokeDelegate", sealAddr, _sealType, _addr, _signTime, v, r, s)
}

func (_Sealsrouter *SealsrouterTransactor) AsyncRevokeDelegate(handler func(*types.Receipt, error), opts *bind.TransactOpts, sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Sealsrouter.contract.AsyncTransact(opts, handler, "revokeDelegate", sealAddr, _sealType, _addr, _signTime, v, r, s)
}

// RevokeDelegate is a paid mutator transaction binding the contract method 0x02abc6ad.
//
// Solidity: function revokeDelegate(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime, uint8 v, bytes32 r, bytes32 s) returns(bool)
func (_Sealsrouter *SealsrouterSession) RevokeDelegate(sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.RevokeDelegate(&_Sealsrouter.TransactOpts, sealAddr, _sealType, _addr, _signTime, v, r, s)
}

func (_Sealsrouter *SealsrouterSession) AsyncRevokeDelegate(handler func(*types.Receipt, error), sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncRevokeDelegate(handler, &_Sealsrouter.TransactOpts, sealAddr, _sealType, _addr, _signTime, v, r, s)
}

// RevokeDelegate is a paid mutator transaction binding the contract method 0x02abc6ad.
//
// Solidity: function revokeDelegate(address sealAddr, uint8 _sealType, address _addr, uint256 _signTime, uint8 v, bytes32 r, bytes32 s) returns(bool)
func (_Sealsrouter *SealsrouterTransactorSession) RevokeDelegate(sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.RevokeDelegate(&_Sealsrouter.TransactOpts, sealAddr, _sealType, _addr, _signTime, v, r, s)
}

func (_Sealsrouter *SealsrouterTransactorSession) AsyncRevokeDelegate(handler func(*types.Receipt, error), sealAddr common.Address, _sealType uint8, _addr common.Address, _signTime *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncRevokeDelegate(handler, &_Sealsrouter.TransactOpts, sealAddr, _sealType, _addr, _signTime, v, r, s)
}

// RevokeSeal is a paid mutator transaction binding the contract method 0x90ef2996.
//
// Solidity: function revokeSeal(address sealAddr) returns(bool)
func (_Sealsrouter *SealsrouterTransactor) RevokeSeal(opts *bind.TransactOpts, sealAddr common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.contract.Transact(opts, "revokeSeal", sealAddr)
}

func (_Sealsrouter *SealsrouterTransactor) AsyncRevokeSeal(handler func(*types.Receipt, error), opts *bind.TransactOpts, sealAddr common.Address) (*types.Transaction, error) {
	return _Sealsrouter.contract.AsyncTransact(opts, handler, "revokeSeal", sealAddr)
}

// RevokeSeal is a paid mutator transaction binding the contract method 0x90ef2996.
//
// Solidity: function revokeSeal(address sealAddr) returns(bool)
func (_Sealsrouter *SealsrouterSession) RevokeSeal(sealAddr common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.RevokeSeal(&_Sealsrouter.TransactOpts, sealAddr)
}

func (_Sealsrouter *SealsrouterSession) AsyncRevokeSeal(handler func(*types.Receipt, error), sealAddr common.Address) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncRevokeSeal(handler, &_Sealsrouter.TransactOpts, sealAddr)
}

// RevokeSeal is a paid mutator transaction binding the contract method 0x90ef2996.
//
// Solidity: function revokeSeal(address sealAddr) returns(bool)
func (_Sealsrouter *SealsrouterTransactorSession) RevokeSeal(sealAddr common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.RevokeSeal(&_Sealsrouter.TransactOpts, sealAddr)
}

func (_Sealsrouter *SealsrouterTransactorSession) AsyncRevokeSeal(handler func(*types.Receipt, error), sealAddr common.Address) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncRevokeSeal(handler, &_Sealsrouter.TransactOpts, sealAddr)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Sealsrouter *SealsrouterTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.contract.Transact(opts, "transferOwnership", newOwner)
}

func (_Sealsrouter *SealsrouterTransactor) AsyncTransferOwnership(handler func(*types.Receipt, error), opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Sealsrouter.contract.AsyncTransact(opts, handler, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Sealsrouter *SealsrouterSession) TransferOwnership(newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.TransferOwnership(&_Sealsrouter.TransactOpts, newOwner)
}

func (_Sealsrouter *SealsrouterSession) AsyncTransferOwnership(handler func(*types.Receipt, error), newOwner common.Address) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncTransferOwnership(handler, &_Sealsrouter.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Sealsrouter *SealsrouterTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _Sealsrouter.Contract.TransferOwnership(&_Sealsrouter.TransactOpts, newOwner)
}

func (_Sealsrouter *SealsrouterTransactorSession) AsyncTransferOwnership(handler func(*types.Receipt, error), newOwner common.Address) (*types.Transaction, error) {
	return _Sealsrouter.Contract.AsyncTransferOwnership(handler, &_Sealsrouter.TransactOpts, newOwner)
}

// SealsrouterApprovalDelegate represents a ApprovalDelegate event raised by the Sealsrouter contract.
type SealsrouterApprovalDelegate struct {
	SealAddr common.Address
	SealType uint8
	Addr     common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// WatchApprovalDelegate is a free log subscription operation binding the contract event 0xdf26fab269074f8c1b191a0667d9d156eb5b41479b9f4f18722d62e714e67a06.
//
// Solidity: event ApprovalDelegate(address indexed sealAddr, uint8 indexed _sealType, address indexed _addr)
func (_Sealsrouter *SealsrouterFilterer) WatchApprovalDelegate(fromBlock *uint64, handler func(int, []types.Log), sealAddr common.Address, _sealType uint8, _addr common.Address) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "ApprovalDelegate", sealAddr, _sealType, _addr)
}

func (_Sealsrouter *SealsrouterFilterer) WatchAllApprovalDelegate(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "ApprovalDelegate")
}

// ParseApprovalDelegate is a log parse operation binding the contract event 0xdf26fab269074f8c1b191a0667d9d156eb5b41479b9f4f18722d62e714e67a06.
//
// Solidity: event ApprovalDelegate(address indexed sealAddr, uint8 indexed _sealType, address indexed _addr)
func (_Sealsrouter *SealsrouterFilterer) ParseApprovalDelegate(log types.Log) (*SealsrouterApprovalDelegate, error) {
	event := new(SealsrouterApprovalDelegate)
	if err := _Sealsrouter.contract.UnpackLog(event, "ApprovalDelegate", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchApprovalDelegate is a free log subscription operation binding the contract event 0xdf26fab269074f8c1b191a0667d9d156eb5b41479b9f4f18722d62e714e67a06.
//
// Solidity: event ApprovalDelegate(address indexed sealAddr, uint8 indexed _sealType, address indexed _addr)
func (_Sealsrouter *SealsrouterSession) WatchApprovalDelegate(fromBlock *uint64, handler func(int, []types.Log), sealAddr common.Address, _sealType uint8, _addr common.Address) error {
	return _Sealsrouter.Contract.WatchApprovalDelegate(fromBlock, handler, sealAddr, _sealType, _addr)
}

func (_Sealsrouter *SealsrouterSession) WatchAllApprovalDelegate(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.Contract.WatchAllApprovalDelegate(fromBlock, handler)
}

// ParseApprovalDelegate is a log parse operation binding the contract event 0xdf26fab269074f8c1b191a0667d9d156eb5b41479b9f4f18722d62e714e67a06.
//
// Solidity: event ApprovalDelegate(address indexed sealAddr, uint8 indexed _sealType, address indexed _addr)
func (_Sealsrouter *SealsrouterSession) ParseApprovalDelegate(log types.Log) (*SealsrouterApprovalDelegate, error) {
	return _Sealsrouter.Contract.ParseApprovalDelegate(log)
}

// SealsrouterOwnershipTransferred represents a OwnershipTransferred event raised by the Sealsrouter contract.
type SealsrouterOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Sealsrouter *SealsrouterFilterer) WatchOwnershipTransferred(fromBlock *uint64, handler func(int, []types.Log), previousOwner common.Address, newOwner common.Address) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "OwnershipTransferred", previousOwner, newOwner)
}

func (_Sealsrouter *SealsrouterFilterer) WatchAllOwnershipTransferred(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "OwnershipTransferred")
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Sealsrouter *SealsrouterFilterer) ParseOwnershipTransferred(log types.Log) (*SealsrouterOwnershipTransferred, error) {
	event := new(SealsrouterOwnershipTransferred)
	if err := _Sealsrouter.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Sealsrouter *SealsrouterSession) WatchOwnershipTransferred(fromBlock *uint64, handler func(int, []types.Log), previousOwner common.Address, newOwner common.Address) error {
	return _Sealsrouter.Contract.WatchOwnershipTransferred(fromBlock, handler, previousOwner, newOwner)
}

func (_Sealsrouter *SealsrouterSession) WatchAllOwnershipTransferred(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.Contract.WatchAllOwnershipTransferred(fromBlock, handler)
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Sealsrouter *SealsrouterSession) ParseOwnershipTransferred(log types.Log) (*SealsrouterOwnershipTransferred, error) {
	return _Sealsrouter.Contract.ParseOwnershipTransferred(log)
}

// SealsrouterRevoke represents a Revoke event raised by the Sealsrouter contract.
type SealsrouterRevoke struct {
	SealAddr common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// WatchRevoke is a free log subscription operation binding the contract event 0x9f77920c3de8baaa98d273e8aa75fae382aaa9f7f60f38979137853e5b73ea2c.
//
// Solidity: event Revoke(address indexed sealAddr)
func (_Sealsrouter *SealsrouterFilterer) WatchRevoke(fromBlock *uint64, handler func(int, []types.Log), sealAddr common.Address) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "Revoke", sealAddr)
}

func (_Sealsrouter *SealsrouterFilterer) WatchAllRevoke(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "Revoke")
}

// ParseRevoke is a log parse operation binding the contract event 0x9f77920c3de8baaa98d273e8aa75fae382aaa9f7f60f38979137853e5b73ea2c.
//
// Solidity: event Revoke(address indexed sealAddr)
func (_Sealsrouter *SealsrouterFilterer) ParseRevoke(log types.Log) (*SealsrouterRevoke, error) {
	event := new(SealsrouterRevoke)
	if err := _Sealsrouter.contract.UnpackLog(event, "Revoke", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchRevoke is a free log subscription operation binding the contract event 0x9f77920c3de8baaa98d273e8aa75fae382aaa9f7f60f38979137853e5b73ea2c.
//
// Solidity: event Revoke(address indexed sealAddr)
func (_Sealsrouter *SealsrouterSession) WatchRevoke(fromBlock *uint64, handler func(int, []types.Log), sealAddr common.Address) error {
	return _Sealsrouter.Contract.WatchRevoke(fromBlock, handler, sealAddr)
}

func (_Sealsrouter *SealsrouterSession) WatchAllRevoke(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.Contract.WatchAllRevoke(fromBlock, handler)
}

// ParseRevoke is a log parse operation binding the contract event 0x9f77920c3de8baaa98d273e8aa75fae382aaa9f7f60f38979137853e5b73ea2c.
//
// Solidity: event Revoke(address indexed sealAddr)
func (_Sealsrouter *SealsrouterSession) ParseRevoke(log types.Log) (*SealsrouterRevoke, error) {
	return _Sealsrouter.Contract.ParseRevoke(log)
}

// SealsrouterRevokeDelegate represents a RevokeDelegate event raised by the Sealsrouter contract.
type SealsrouterRevokeDelegate struct {
	SealAddr common.Address
	SealType uint8
	Addr     common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// WatchRevokeDelegate is a free log subscription operation binding the contract event 0x628c7d642c872f7460cabd4a47b08726b15931adbcf4af5acbec7764608a3bec.
//
// Solidity: event RevokeDelegate(address indexed sealAddr, uint8 indexed _sealType, address indexed _addr)
func (_Sealsrouter *SealsrouterFilterer) WatchRevokeDelegate(fromBlock *uint64, handler func(int, []types.Log), sealAddr common.Address, _sealType uint8, _addr common.Address) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "RevokeDelegate", sealAddr, _sealType, _addr)
}

func (_Sealsrouter *SealsrouterFilterer) WatchAllRevokeDelegate(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "RevokeDelegate")
}

// ParseRevokeDelegate is a log parse operation binding the contract event 0x628c7d642c872f7460cabd4a47b08726b15931adbcf4af5acbec7764608a3bec.
//
// Solidity: event RevokeDelegate(address indexed sealAddr, uint8 indexed _sealType, address indexed _addr)
func (_Sealsrouter *SealsrouterFilterer) ParseRevokeDelegate(log types.Log) (*SealsrouterRevokeDelegate, error) {
	event := new(SealsrouterRevokeDelegate)
	if err := _Sealsrouter.contract.UnpackLog(event, "RevokeDelegate", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchRevokeDelegate is a free log subscription operation binding the contract event 0x628c7d642c872f7460cabd4a47b08726b15931adbcf4af5acbec7764608a3bec.
//
// Solidity: event RevokeDelegate(address indexed sealAddr, uint8 indexed _sealType, address indexed _addr)
func (_Sealsrouter *SealsrouterSession) WatchRevokeDelegate(fromBlock *uint64, handler func(int, []types.Log), sealAddr common.Address, _sealType uint8, _addr common.Address) error {
	return _Sealsrouter.Contract.WatchRevokeDelegate(fromBlock, handler, sealAddr, _sealType, _addr)
}

func (_Sealsrouter *SealsrouterSession) WatchAllRevokeDelegate(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.Contract.WatchAllRevokeDelegate(fromBlock, handler)
}

// ParseRevokeDelegate is a log parse operation binding the contract event 0x628c7d642c872f7460cabd4a47b08726b15931adbcf4af5acbec7764608a3bec.
//
// Solidity: event RevokeDelegate(address indexed sealAddr, uint8 indexed _sealType, address indexed _addr)
func (_Sealsrouter *SealsrouterSession) ParseRevokeDelegate(log types.Log) (*SealsrouterRevokeDelegate, error) {
	return _Sealsrouter.Contract.ParseRevokeDelegate(log)
}

// SealsrouterSealsCreated represents a SealsCreated event raised by the Sealsrouter contract.
type SealsrouterSealsCreated struct {
	LegalAddr  common.Address
	CreditCode []byte
	SealAddr   common.Address
	Length     *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// WatchSealsCreated is a free log subscription operation binding the contract event 0x62988a5fd61af59a922a9792dadb1666979ff7e4430543aaed3f3725bbd7f00c.
//
// Solidity: event SealsCreated(address indexed legalAddr, bytes creditCode, address sealAddr, uint256 length)
func (_Sealsrouter *SealsrouterFilterer) WatchSealsCreated(fromBlock *uint64, handler func(int, []types.Log), legalAddr common.Address) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "SealsCreated", legalAddr)
}

func (_Sealsrouter *SealsrouterFilterer) WatchAllSealsCreated(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.contract.WatchLogs(fromBlock, handler, "SealsCreated")
}

// ParseSealsCreated is a log parse operation binding the contract event 0x62988a5fd61af59a922a9792dadb1666979ff7e4430543aaed3f3725bbd7f00c.
//
// Solidity: event SealsCreated(address indexed legalAddr, bytes creditCode, address sealAddr, uint256 length)
func (_Sealsrouter *SealsrouterFilterer) ParseSealsCreated(log types.Log) (*SealsrouterSealsCreated, error) {
	event := new(SealsrouterSealsCreated)
	if err := _Sealsrouter.contract.UnpackLog(event, "SealsCreated", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchSealsCreated is a free log subscription operation binding the contract event 0x62988a5fd61af59a922a9792dadb1666979ff7e4430543aaed3f3725bbd7f00c.
//
// Solidity: event SealsCreated(address indexed legalAddr, bytes creditCode, address sealAddr, uint256 length)
func (_Sealsrouter *SealsrouterSession) WatchSealsCreated(fromBlock *uint64, handler func(int, []types.Log), legalAddr common.Address) error {
	return _Sealsrouter.Contract.WatchSealsCreated(fromBlock, handler, legalAddr)
}

func (_Sealsrouter *SealsrouterSession) WatchAllSealsCreated(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Sealsrouter.Contract.WatchAllSealsCreated(fromBlock, handler)
}

// ParseSealsCreated is a log parse operation binding the contract event 0x62988a5fd61af59a922a9792dadb1666979ff7e4430543aaed3f3725bbd7f00c.
//
// Solidity: event SealsCreated(address indexed legalAddr, bytes creditCode, address sealAddr, uint256 length)
func (_Sealsrouter *SealsrouterSession) ParseSealsCreated(log types.Log) (*SealsrouterSealsCreated, error) {
	return _Sealsrouter.Contract.ParseSealsCreated(log)
}
